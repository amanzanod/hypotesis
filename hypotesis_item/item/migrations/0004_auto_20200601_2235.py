# Generated by Django 3.0.6 on 2020-06-01 18:44

from django.db import migrations


# Add Sections.
def add_sections(apps, schema_editor):
    section = apps.get_model('item', 'Section')
    section_object = section(name='Introducción', alias='dbdb_1', course='dgbd', order=1, is_visible=True)
    section_object.save()
    section_object = section(name='Python básico', alias='dbdb_2', course='dgbd', order=2, is_visible=True)
    section_object.save()
    section_object = section(name='Conociendo el mundo de Python, pip y Django', alias='dbdb_3',
                             course='dgbd', order=3, is_visible=True)
    section_object.save()
    section_object = section(name='Crear app de listados de productos', alias='dbdb_4',
                             course='dgbd', order=4, is_visible=True)
    section_object.save()
    section_object = section(name='Crear Rest Api con Django REST framework', alias='dbdb_5',
                             course='dgbd', order=5, is_visible=True)
    section_object.save()
    section_object = section(name='Aplicación con Vue 2', alias='dbdb_6', course='dgbd', order=6, is_visible=True)
    section_object.save()
    section_object = section(name='Manejo de formularios en Django', alias='dbdb_7',
                             course='dgbd', order=7, is_visible=True)
    section_object.save()
    section_object = section(name='Rest Api con Django REST framework parte 2', alias='dbdb_8',
                             course='dgbd', order=8, is_visible=True)
    section_object.save()
    section_object = section(name='Paquetes imprescindibles para Django', alias='dbdb_9',
                             course='dgbd', order=9, is_visible=True)
    section_object.save()
    section_object = section(name='Resumen del proyecto final', alias='dbdb_10',
                             course='dgbd', order=10, is_visible=True)
    section_object.save()


# Add Items.
def add_items(apps, schema_editor):
    section = apps.get_model('item', 'Section')
    section_5 = section.objects.get(alias='dbdb_5')
    item_type = apps.get_model('item', 'ItemType')
    item_type_video = item_type.objects.get(alias='video')
    item_type_audio = item_type.objects.get(alias='audio')
    item_type_question = item_type.objects.get(alias='question')
    item_type_deliverable = item_type.objects.get(alias='deliverable')
    item_type_pdf = item_type.objects.get(alias='pdf_file')
    language = apps.get_model('item', 'Language')
    language_es = language.objects.get(code='es')
    state = apps.get_model('item', 'State')
    state_active = state.objects.get(alias='active')
    format_item = apps.get_model('item', 'Format')
    format_ind = format_item.objects.get(alias='individual')
    format_group = format_item.objects.get(alias='group')
    item = apps.get_model('item', 'Item')
    item_object = item(name='Instalar Django Rest Framework', alias='dbdb_video_1', type=item_type_video, order=1,
                       format=format_ind, state=state_active, is_visible=True, duration=283, section=section_5,
                       language=language_es)
    item_object.save()
    item_object = item(name='Crear estructura para la Rest Api - modelo Element', alias='dbdb_video_2', order=2,
                       type=item_type_video, language=language_es,
                       format=format_ind, state=state_active, is_visible=True, duration=763, section=section_5)
    item_object.save()
    item_object = item(name='Documentación para validación de tipos de parámetro de entrada', order=3,
                       alias='dbdb_pdf_1', type=item_type_pdf, language=language_es,
                       format=format_ind, state=state_active, is_visible=True, duration=256, section=section_5)
    item_object.save()
    item_object = item(name='Podcast de mejores prácticas de seguridad en APIs', alias='dbdb_video_3', order=4,
                       type=item_type_audio, language=language_es,
                       format=format_ind, state=state_active, is_visible=True, duration=283, section=section_5)
    item_object.save()
    item_object = item(name='Crear métodos personalizados: Elementos dado la categoría', alias='dbdb_video_4',
                       type=item_type_video, order=5, language=language_es,
                       format=format_ind, state=state_active, is_visible=True, duration=283, section=section_5)
    item_object.save()
    item_object = item(name='Realización de API CRUD para Productos', alias='dbdb_deliverable_1',
                       type=item_type_deliverable, order=6, language=language_es,
                       format=format_group, state=state_active, is_visible=True, section=section_5)
    item_object.save()
    item_object = item(name='Cuestionario Django REST', alias='dbdb_question_1', type=item_type_question, order=7,
                       language=language_es,
                       format=format_ind, state=state_active, is_visible=True, duration=283, section=section_5)
    item_object.save()


class Migration(migrations.Migration):

    dependencies = [
        ('item', '0003_auto_20200601_2235'),
    ]

    operations = [
        migrations.RunPython(add_sections),
        migrations.RunPython(add_items),
    ]

